{"version":3,"sources":["NavMobile.js","Nav.js","getIcons.js","WeatherCard.js","utils.js","WeatherCardToday.js","App.js","index.js"],"names":["NavMobile","props","useState","sidebar","setSidebar","showSidebar","handleClick","cityName","city","className","onClick","href","Nav","name","id","getIcons","weatherState","WeatherCard","data","temp","moment","locale","minTempToday","tempMin","main","temp_min","forEach","instance","getMinTemp","maxTempToday","tempMax","temp_max","getMaxTemp","src","weather","alt","dt_txt","slice","format","humidity","wind","speed","WeatherCardToday","location","todayWeather","setTodayWeather","loadingStatus","setLoadingStatus","useEffect","url","fetch","then","response","json","getTodayWeather","App","CityName","setCityName","arrOriginal","setArrOriginal","list","apiWeather","forecast","forecastData","arr","i","push","find","day","add","filter","shift","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ea36e32.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const NavMobile = (props) => {\n\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () => setSidebar(!sidebar);\n    const handleClick = (cityName) => {\n        const {city}= props;\n        city(cityName);\n    };\n\n    return (\n        <>\n            <div className='navbar nav-mobile d-sm-block d-md-none bg-dark' onClick={showSidebar}>\n                <div  className='menu-bars'>\n                    <i className=\"fas fa-bars d-md-none\" onClick={showSidebar}/>\n                </div>\n            </div>\n\n            <nav className={sidebar ? 'nav-menu active bg-dark d-sm-block d-md-none' : 'nav-menu  bg-dark d-sm-block d-md-none'} onClick={showSidebar}>\n                <ul className=\"nav-menu-items\" onClick={showSidebar}>\n                    <li className=\"navbar-toggle bg-dark d-block\">\n                        <a onClick={()=> handleClick('Amsterdam')} className=\"menu-bars nav-text\" href=\"#\">Amsterdam <span className=\"sr-only\">(current)</span></a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Barcelona')} href=\"#\">Barcelona</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Bruselas')} href=\"#\">Bruselas</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Buenos Aires')} href=\"#\">Buenos Aires</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Paris')} href=\"#\">Paris</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Londres')} href=\"#\">London</a>\n                    </li>\n                </ul>\n            </nav>\n                    \n        </>\n    )\n};\n","import React from 'react';\nimport { NavMobile } from './NavMobile';\n\nexport const Nav = (props) => {\n\n    const handleClick = (cityName) => {\n        const {name}= props;\n        name(cityName);\n    };\n\n    return (\n        <>\n            <NavMobile city={props.name}/>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark d-none d-md-flex\">\n                <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a onClick={()=> handleClick('Amsterdam')} className=\"nav-link\" href=\"#\">Amsterdam <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Barcelona')} href=\"#\">Barcelona</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Brussels')} href=\"#\">Brussels</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Buenos Aires')} href=\"#\">Buenos Aires</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Londres')} href=\"#\">London</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Paris')} href=\"#\">Paris</a>\n                        </li>\n                    </ul>\n                </div>\n        </nav>\n      </>\n    )\n}\n","\n export const getIcons = (weatherState) => {\n    \n    switch (weatherState) {\n        case 'Thunderstorm':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/thunder.svg';\n        case 'Drizzle':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/rainy-4.svg';\n        case 'Rain':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/rainy-5.svg';\n        case 'Snow':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/4d4f57868caec5d58f03628fafddf7e223835c1f/public/assets/snowy-4.svg';\n        case 'Mist':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Smoke':\n            return'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Haze':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Dust':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Fog':\n            return'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Sand':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Ash':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Squall':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Tornado':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/876b315a5e08da1b587de87455ded2f786bb7dd0/public/assets/cloudy.svg';\n        case 'Clear':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/4d4f57868caec5d58f03628fafddf7e223835c1f/public/assets/day.svg';\n        case 'Clouds':\n            return 'https://raw.githubusercontent.com/danielavazquez95/weatherApp/4d4f57868caec5d58f03628fafddf7e223835c1f/public/assets/cloudy.svg';\n        default:\n            return;\n    }\n\n};","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { getIcons } from './getIcons';\nimport { getMaxTemp, getMinTemp } from './utils';\n\nexport const WeatherCard = ({data, temp}) => {\n    moment.locale('es');\n    const minTempToday  = getMinTemp(temp); // Busco minimos y maximos de todas las instancias de datos recibidas (la API devuelve un pronostico c/ 3 horas).\n    const maxTempToday  = getMaxTemp(temp);\n\n    return (\n       \n            <div className=\"weather-card my-3 mx-2\">\n                <img  className=\"ico\" src={getIcons(data.weather[0].main)} alt=\"Card\" />\n                <p> {moment(data.dt_txt.slice(0,10)).format('dddd')} </p>\n                <span className=\"data1\">Min: {minTempToday}° / Max: {maxTempToday}°</span>\n                <span className=\"data2\">Humedad {data.main.humidity}%</span>\n                <span className=\"data3\">Viento {data.wind.speed} m/s</span>\n            </div>\n       \n    )\n};\n","\nexport const getMinTemp = (data) => {\n   let tempMin = data[0].main.temp_min;\n   data.forEach(instance => {\n      if(instance.main.temp_min < tempMin){\n         tempMin = instance.main.temp_min\n      }\n   })\n   return tempMin;\n};\n\nexport const getMaxTemp = (data) => {\n   let tempMax = data[0].main.temp_max;\n   data.forEach(instance => {\n      if(instance.main.temp_max > tempMax){\n         tempMax = instance.main.temp_max\n      }\n   })\n   return tempMax;\n};","import React, { useEffect, useState } from 'react';\nimport {getIcons} from './getIcons';\n\nexport const WeatherCardToday = ({location}) => {\n  \n    const [todayWeather, setTodayWeather] = useState({});\n    const [loadingStatus, setLoadingStatus]= useState(true);\n\n    const getTodayWeather = () => { // Este llamado es necesario porque la api gratuita de OpenWeatherMap da pronostico de a 3 horas y pasadas las 21hs de cada dia no devuelve datos, para no tener problemas de estabilidad.\n        const apiKey = '7e47ac9a5e54fab20902167c0058fbe1';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`;\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n            setTodayWeather(data);\n            setLoadingStatus(false);\n          });\n    };\n\n    useEffect(() => {\n    \n        getTodayWeather()\n        \n      }, [location]);\n\n    return (\n      <>\n      { !loadingStatus && \n        <div className=\"weather-card-today my-3 mx-2\">\n            <img  className=\"ico1\" src={getIcons(todayWeather.weather[0].main)} alt=\"Card\" />\n            <h1>{todayWeather.main.temp}°</h1>\n            <p>{todayWeather.name}</p>\n            <span className=\"data1\"> Min: {todayWeather.main.temp_min}° / Max: {todayWeather.main.temp_max}°</span>\n            <span className=\"data2\">Humedad: {todayWeather.main.humidity} %</span>\n            <span className=\"data3\">Viento: {todayWeather.wind.speed} m/s</span>\n        </div>\n      }\n      </>\n    \n    )\n};\n","import React, { useEffect } from 'react';\nimport { Nav } from './Nav';\nimport { WeatherCard } from './WeatherCard';\nimport { WeatherCardToday } from './WeatherCardToday';\nimport { useState } from \"react\";\nimport moment from 'moment';\n\nexport const App = () => {\n\n  const [CityName, setCityName] = useState('Buenos Aires');\n  const [arrOriginal, setArrOriginal] = useState([]);\n  const [loadingStatus, setLoadingStatus]= useState(true);\n\n  const apiWeather = () => {\n      const apiKey = '7e47ac9a5e54fab20902167c0058fbe1';\n      const url = `https://api.openweathermap.org/data/2.5/forecast?q=${CityName}&appid=${apiKey}&units=metric`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setArrOriginal(data.list);\n          setLoadingStatus(false);\n        });\n  };\n \n  useEffect(() => {\n    \n    apiWeather()\n    \n  }, [CityName]);\n  \n  const forecast = []; // es utilizado para el map en el render (crea una posicion del array por cada dia del pronostico)\n  const forecastData = []; // contiene los datos de los 5 dias siguientes.\n  \n  if(loadingStatus===false){\n    const arr = arrOriginal; // copia del array obtenido de la consulta\n    for (let i = 1 ; i < 6; i++){//itero sobre el array de datos sin obtener el primer dia (solo pronostico para los siguientes)\n      forecast.push(arr.find(day => day.dt_txt.slice(0,10) === moment().add(i,'days').format('YYYY-MM-DD'))) // creo un array por cada dia\n    }\n    for (let i = 0 ; i < 6; i++){ // recorro el array para obtener los dias siguientes del pronostico\n      forecastData.push(arr.filter(day => day.dt_txt.slice(0,10) === moment().add(i,'days').format('YYYY-MM-DD')))// agrega a forecastData todos los valores de cada dia en su posicion correspondiente\n    }\n  };\n  forecastData.shift(); // remuevo el primer dia\n  \n  return (\n\n    <div className=\"page-container\">\n      <Nav name={setCityName}/>\n      <div className=\"container\">\n        <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\" d-flex flex-wrap justify-content-center\">\n                   {\n                      !loadingStatus &&\n                      (<>\n                      <WeatherCardToday location={CityName}/> \n                      {forecast.map((day, i) => <WeatherCard data={forecast[i]} temp={forecastData[i]} key={i}/>)}\n                      </>)\n                    }\n                    </div>\n                </div>\n        </div>\n      </div>\n  </div>\n  )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}