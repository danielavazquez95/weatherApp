{"version":3,"sources":["NavMobile.js","Nav.js","getIcons.js","WeatherCard.js","WeatherCardToday.js","App.js","utils.js","index.js"],"names":["NavMobile","props","useState","sidebar","setSidebar","showSidebar","handleClick","cityName","city","className","onClick","href","Nav","name","id","getIcons","weatherState","WeatherCard","data","temp","moment","locale","minTempToday","main","temp_min","maxTempToday","length","temp_max","src","weather","alt","dt_txt","slice","format","humidity","wind","speed","WeatherCardToday","today","App","setName","location","setWeather","arrOriginal","setArrOriginal","loadingStatus","setLoadingStatus","useEffect","url","fetch","then","response","json","list","weather_data","parseData","apiWeather","forecast","minMaxTemps","arr","i","push","find","day","add","filter","todayMinMax","splice","shift","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2ae008f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n\nexport const NavMobile = (props) => {\n\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () => setSidebar(!sidebar);\n    const handleClick = (cityName) => {\n        const {city}= props;\n        city(cityName);\n    };\n\n    return (\n        <>\n            <div className='navbar nav-mobile d-sm-block d-md-none bg-dark' onClick={showSidebar}>\n                <div  className='menu-bars'>\n                    <i className=\"fas fa-bars d-md-none\" onClick={showSidebar}/>\n                </div>\n            </div>\n\n            <nav className={sidebar ? 'nav-menu active bg-dark d-sm-block d-md-none' : 'nav-menu  bg-dark d-sm-block d-md-none'} onClick={showSidebar}>\n                <ul className=\"nav-menu-items\" onClick={showSidebar}>\n                    <li className=\"navbar-toggle bg-dark d-block\">\n                        <a onClick={()=> handleClick('Amsterdam')} className=\"menu-bars nav-text\"  href=\"#\">Amsterdam <span className=\"sr-only\">(current)</span></a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Barcelona')} href=\"#\">Barcelona</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Bruselas')} href=\"#\">Bruselas</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Buenos Aires')} href=\"#\">Buenos Aires</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Paris')} href=\"#\">Paris</a>\n                        <a className=\"menu-bars nav-text\" onClick={()=> handleClick('Londres')} href=\"#\">London</a>\n                    </li>\n                </ul>\n            </nav>\n                    \n        </>\n    )\n};\n","import React from 'react';\nimport { NavMobile } from './NavMobile';\n\nexport const Nav = (props) => {\n\n    const handleClick = (cityName) => {\n        const {name}= props;\n        name(cityName);\n    };\n\n    return (\n        <>\n            <NavMobile city={props.name}/>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark d-none d-md-flex\">\n                <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a onClick={()=> handleClick('Amsterdam')} className=\"nav-link\" href=\"#\">Amsterdam <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Barcelona')} href=\"#\">Barcelona</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Bruselas')} href=\"#\">Bruselas</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Buenos Aires')} href=\"#\">Buenos Aires</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Paris')} href=\"#\">Paris</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick={()=> handleClick('Londres')} href=\"#\">London</a>\n                        </li>\n                    </ul>\n                </div>\n        </nav>\n      </>\n    )\n}\n","\n export const getIcons = (weatherState) => {\n    \n    switch (weatherState) {\n        case 'Thunderstorm':\n            return './icons/thunder.svg';\n        case 'Drizzle':\n            return './icons/rainy-4.svg';\n        case 'Rain':\n            return './icons/rainy-5.svg';\n        case 'Snow':\n            return './icons/snowy-4.svg';\n        case 'Mist':\n            return './icons/cloudy.svg';\n        case 'Smoke':\n            return'./icons/cloudy.svg';\n        case 'Haze':\n            return './icons/cloudy.svg';\n        case 'Dust':\n            return './icons/cloudy.svg';\n        case 'Fog':\n            return'./icons/cloudy.svg';\n        case 'Sand':\n            return './icons/cloudy.svg';\n        case 'Ash':\n            return './icons/cloudy.svg';\n        case 'Squall':\n            return './icons/cloudy.svg';\n        case 'Tornado':\n            return './icons/cloudy.svg';\n        case 'Clear':\n            return './icons/day.svg';\n        case 'Clouds':\n            return './icons/cloudy.svg';\n        default:\n            return;\n    }\n\n};","import React from 'react';\nimport { getIcons } from './getIcons';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nexport const WeatherCard = ({data, temp}) => {\n    moment.locale('es');\n    const today = temp[0];\n    const minTempToday  = temp[0].main.temp_min;\n    const todayLength = temp.length -1 ;\n    const maxTempToday  = temp[todayLength].main.temp_max;\n\n    return (\n       \n            <div className=\"weather-card my-3 mx-2\">\n                <img  className=\"ico\" src={getIcons(data.weather[0].main)} alt=\"Card\" />\n               \n                <p> {moment(data.dt_txt.slice(0,10)).format('dddd')} </p>\n                <span className=\"data1\">Min: {minTempToday}° / Max: {maxTempToday}°</span>\n                <span className=\"data2\">Humedad {data.main.humidity}%</span>\n                <span className=\"data3\">Viento {data.wind.speed} m/s</span>\n            </div>\n       \n    )\n};\n","import React from 'react';\nimport {getIcons} from './getIcons';\n\n\nexport const WeatherCardToday = ({data,temp}) => {\n    const today = temp[0];\n    const minTempToday  = today[0].main.temp_min;\n    const todayLength = today.length -1 ;\n    const maxTempToday  = today[todayLength].main.temp_max;\n\n    return (\n        <div className=\"weather-card-today my-3 mx-2\">\n            <img  className=\"ico1\" src={getIcons(data.main)} alt=\"Card\" />\n            <h1>{data.temp}°</h1>\n            <p>{data.name}</p>\n            <span className=\"data1\"> Min: {minTempToday}° / Max: {maxTempToday}°</span>\n            <span className=\"data2\">Humedad: {data.humidity} %</span>\n            <span className=\"data3\">Viento: {data.wind}</span>\n        </div>\n    \n    )\n};\n","import React, { useEffect } from 'react';\nimport { Nav } from './Nav';\nimport { WeatherCard } from './WeatherCard';\nimport { WeatherCardToday } from './WeatherCardToday';\nimport { useState } from \"react\";\nimport { parseData } from './utils';\nimport moment from 'moment';\n\nexport const App = () => {\n\n  const [name, setName] = useState('Buenos Aires');\n  const location = name;\n  const [weather, setWeather] = useState({});\n  const [arrOriginal, setArrOriginal] = useState([]);\n  const [loadingStatus, setLoadingStatus]= useState(true);\n\n  const apiWeather = () => {\n      const apiKey = '7e47ac9a5e54fab20902167c0058fbe1';\n      const url = `http://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${apiKey}&units=metric`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setArrOriginal(data.list);\n          setWeather(parseData(data));\n          setLoadingStatus(false);\n        });\n  };\n \n  useEffect(() => {\n    \n    apiWeather()\n    \n  }, [name]);\n  \n  const forecast = [];\n  const minMaxTemps = [];\n  \n  if(loadingStatus===false){\n    const arr = arrOriginal; // copia del array obtenido de la consulta\n    for (let i = 1 ; i < 6; i++){//itero sobre el array de datos sin obtener el primer dia (solo pronostico para los siguientes)\n      forecast.push(arr.find(day => day.dt_txt.slice(0,10) === moment().add(i,'days').format('YYYY-MM-DD'))) // creo un array por cada dia\n    }\n    minMaxTemps.push(arr.filter(day => day.dt_txt.slice(0,10) === moment().format('YYYY-MM-DD'))); // Obtengo todos los datos para ese dia\n    for (let i = 0 ; i < 6; i++){ // recorro el array para obtener los dias siguientes del pronostico\n      minMaxTemps.push(arr.filter(day => day.dt_txt.slice(0,10) === moment().add(i,'days').format('YYYY-MM-DD')))// agrega a MinMaxtemps todos los valores de cada dia en su posicion correspondiente\n    }\n  };\n  const todayMinMax = minMaxTemps.splice(0,1);// obtengo las temperaturas del dia de hoy para WeatherCardToday\n  minMaxTemps.shift(); // remuevo el primer dia\n  \n  return (\n\n    <div className=\"page-container\">\n      <Nav name={setName}/>\n      <div className=\"container\">\n        <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\" d-flex flex-wrap justify-content-center\">\n                   {\n                      !loadingStatus &&\n                      (<>\n                      <WeatherCardToday data={weather} temp={todayMinMax}/> \n                      {forecast.map((day, i) => <WeatherCard data={forecast[i]} temp={minMaxTemps[i]} key={i}/>)}\n                      </>)\n                    }\n                    </div>\n                </div>\n        </div>\n      </div>\n  </div>\n  )\n};\n","\n\nexport  const parseData = (weather_data) => {\n   \n   const name = weather_data.city.name;\n   const {humidity, temp, temp_min, temp_max} = weather_data.list[0].main;\n   const {main} = weather_data.list[0].weather[0];\n   const {speed} = weather_data.list[0].wind;\n   \n   const data = { \n      name,\n      humidity,\n      temp,\n      temp_max,\n      temp_min,\n      main,\n      wind: `${speed} m/s`\n   }\n \n   return data;\n \n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}